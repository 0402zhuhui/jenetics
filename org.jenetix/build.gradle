/*
 * Java Genetic Algorithm Library (@__identifier__@).
 * Copyright (c) @__year__@ Franz Wilhelmstötter
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:
 *    Franz Wilhelmstötter (franz.wilhelmstoetter@gmx.at)
 */

import org.apache.tools.ant.filters.ReplaceTokens

apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "idea"

apply from: "../build-util.gradle"

task pack(dependsOn: [build, javadoc]) << {
	def exportBaseDir = new File(rootProject.buildDir, "package/${identifier}")
	def exportSourceDir = new File(exportBaseDir, "source/${project.name}")
	def exportLibDir = new File(exportBaseDir, "lib")

	exportBaseDir.mkdirs()
	exportSourceDir.mkdirs()
	exportLibDir.mkdirs()

	// Copy the library
	copy {
		from("${buildDir}/libs")
		into "${exportLibDir}"
	}
	copy {
		from("../project/lib") {
			include "jscience-*.jar"
		}
		into "${exportLibDir}"
	}

	// Copy the sources.
	copy {
		from(".") {
			include "src/**"
			include "*.gradle"
			exclude ".gradle"
			exclude "src/site"
		}
		into "${exportSourceDir}"
		filter(ReplaceTokens, tokens: [
			__identifier__: identifier,
			__year__: copyrightYear
		])
	}

	// Copy the javadoc
	copy {
		from("${buildDir}/docs/javadoc") {
			include "**/*.html"
		}
		into "${exportBaseDir}/javadoc/${project.name}"
		filter(ReplaceTokens, tokens: [
			__identifier__: identifier,
			__year__: copyrightYear
		])
	}
	copy {
		from("${buildDir}/docs/javadoc") {
			exclude "**/*.html"
		}
		into "${exportBaseDir}/javadoc/${project.name}"
	}

	// Copy the test-report.
	copy {
		from("${buildDir}/reports") {
			include "tests/**"
			include "*.gradle"
			exclude ".gradle"
		}
		into "${exportBaseDir}/reports/${project.name}"
	}
}

jar {
	manifest {
		attributes "Implementation-Title": "${project.name}",
					"Implementation-Version": version,
					"Implementation-URL": "http://jenetics.sourceforge.net",
					"Implementation-Vendor": "Jenetics",
					"ProjectName": "Jenetics",
					"Version": version,
					"Maintainer": "Franz Wilhelmstötter"
	}
}

javadoc {

	configure(options) {
		memberLevel = "PROTECTED"
		version = true
		author = true
		docEncoding = "UTF-8"
		charSet = "UTF-8"
		linkSource = true
		links = [
			"http://download.oracle.com/javase/7/docs/api/",
			"http://jscience.org/api/",
			"http://javolution.org/target/site/apidocs/"
		]
		windowTitle = "Jenetics API ${project.version}"
		docTitle = "<h1>Jenetics API (Version $project.version)</h1>"
		bottom = "&copy; ${copyrightYear} Franz Wilhelmst&ouml;tter  &nbsp;<i>(${dateformat.format(now)})</i>"
		stylesheetFile = file("../project/resources/javadoc/stylesheet.css")
	}

	def destination = destinationDir.path

	doLast() {
		javaexec {
			main = "org.jenetics.colorizer.Colorize"
			args destination
			classpath = files("../project/lib/colorizer.jar")
		}
		javaexec {
			main = "de.java2html.Java2Html"
			args = [
				"-srcdir", "src/main/java",
				"-targetdir", "$destination/src-html"
			]
			classpath = files("../project/lib/java2html.jar")
		}
		copy {
			from "src/main/java/org/jenetix/doc-files"
			into "${destination}/org/jenetix/doc-files"
		}
		copy {
			from "src/main/java/org/jenetix/util/doc-files"
			into "${destination}/org/jenetix/util/doc-files"
		}
	}
}

test {
	useTestNG()
	options {
		suites "src/test/java/org/jenetix/testng.xml"
	}
}

task export(dependsOn: pack) << {
}

configurations {
    compile
}

repositories {
	flatDir(dir: "../project/lib")
}

dependencies {
	compile project(':org.jenetics')
	compile "jscience:jscience:4.3.1"

	testCompile "testng:testng:6.8.1"
}



