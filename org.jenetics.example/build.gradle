/*
 * Java Genetic Algorithm Library (@__identifier__@).
 * Copyright (c) @__year__@ Franz Wilhelmstötter
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 *
 * Author:
 *   Franz Wilhelmstötter (franz.wilhelmstoetter@gmx.at)
 *
 */

import org.apache.tools.ant.filters.ReplaceTokens

/**
 * @author <a href="mailto:franz.wilhelmstoetter@gmx.at">Franz Wilhelmstötter</a>
 * @since 1.2
 * @version 1.4 &mdash; <em>$Date$</em>
 */

apply plugin: 'java'
apply plugin: 'osgi'
apply plugin: 'eclipse'
apply plugin: 'idea'

apply from: "${rootDir}/commons.gradle"

 task pack(dependsOn: build) << {
	def exportBaseDir = new File(rootProject.buildDir, "package/${identifier}")
	def exportSourceDir = new File(exportBaseDir, "source/${project.name}")
	def exportLibDir = new File(exportBaseDir, "lib")
	def exportScriptDir = new File(exportBaseDir, "scripts")

	exportBaseDir.mkdirs()
	exportSourceDir.mkdirs()
	exportLibDir.mkdirs()
	//exportScriptDir.mkdirs()

	// Copy the library
	copy {
		from("${buildDir}/libs")
		into "${exportLibDir}"
	}

	// Copy the scripts.
	copy {
		from("./src/main") {
			include "scripts/**"
			exclude ".gradle"
		}
		into "${exportBaseDir}"
		filter(ReplaceTokens, tokens: [
			__identifier__: identifier,
			__year__: copyrightYear,
			__version__: version
		])
	}

	// Copy the sources.
	copy {
		from(".") {
			include 'src/**'
			include '*.gradle'
			exclude '.gradle'
			exclude '*.iml'
			exclude '*.ipr'
			exclude '*.iws'
			exclude '.project'
			exclude '.classpath'
		}
		into "${exportSourceDir}"
		filter(ReplaceTokens, tokens: [
			__identifier__: identifier,
			__year__: copyrightYear
		])
	}
}

export.dependsOn(pack)

jar {
	manifest {
		name = "org.jenetics.example"
		instruction "Export-Package",
				"org.jenetics.example"
		instruction "Bundle-Vendor", "Franz Wilhelmstötter"
		instruction "Bundle-Description", "Jenetics Algorithm Library"
		instruction "Bundle-DocURL", "http://jenetics.sourceforge.net"

		attributes "Implementation-Title": "org.jenetics.example",
					"Implementation-Version": version,
					"Implementation-URL": "http://jenetics.sourceforge.net",
					"Implementation-Vendor": "Jenetics",
					"ProjectName": "Jenetics",
					"Version": version,
					"Maintainer": "Franz Wilhelmstötter"
	}
}

dependencies {
	compile project(':org.jenetics')
}
