/*
 * Java Genetic Algorithm Library (@__identifier__@).
 * Copyright (c) @__year__@ Franz Wilhelmstötter
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 *
 * Author:
 *   Franz Wilhelmstötter (franz.wilhelmstoetter@gmx.at)
 *
 */

import org.apache.tools.ant.filters.ReplaceTokens

/**
 * @author <a href="mailto:franz.wilhelmstoetter@gmx.at">Franz Wilhelmstötter</a>
 * @since 1.2
 * @version 1.4 &mdash; <em>$Date: 2013-08-25 $</em>
 */

apply plugin: 'java'
apply plugin: 'osgi'
apply plugin: 'eclipse'
apply plugin: 'idea'

apply from: "${rootDir}/gradle/commons.gradle"

task pack(dependsOn: build) {}

export.dependsOn(pack)
export.doLast {
	// Copy the scripts.
	copy {
		from('src/main/scripts') {
			include '**/*'
		}
		into exportScriptDir
		filter(ReplaceTokens, tokens: [
			__identifier__: identifier,
			__year__: copyrightYear,
			__version__: version
		])
	}
}

jar {
	manifest {
		name = 'org.jenetics.example'
		instruction 'Export-Package',
				'org.jenetics.example'
		instruction 'Bundle-Vendor', jeneticsAuthor
		instruction 'Bundle-Description', 'Jenetics - Java Genetic Algorithm Library'
		instruction 'Bundle-DocUR', jeneticsURL

		attributes 'Implementation-Title': 'org.jenetics.example',
					'Implementation-Version': version,
					'Implementation-URL': jeneticsURL,
					'Implementation-Vendor': jeneticsName,
					'ProjectName': jeneticsName,
					'Version': version,
					'Maintainer': jeneticsAuthor
	}
}

clean.doLast {
	file("${projectDir}/bin").deleteDir()
}

dependencies {
	compile project(':org.jenetics')
}
