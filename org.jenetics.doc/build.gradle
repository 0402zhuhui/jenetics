/*
 * Java Genetic Algorithm Library (@__identifier__@).
 * Copyright (c) @__year__@ Franz Wilhelmstötter
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:
 *    Franz Wilhelmstötter (franz.wilhelmstoetter@gmx.at)
 */

import java.text.SimpleDateFormat
import java.util.Date

import org.apache.tools.ant.filters.ReplaceTokens

apply from: "../build-util.gradle"

task buildManual << {
	def buildTemp = new File(buildDir, "tmp")
	def buildTempLyx = new File(buildTemp, "lyx")
	buildTempLyx.mkdirs()

	def buildDoc = new File(buildDir, "doc")
	buildDoc.mkdirs()

	def content = new File("${projectDir}/src/main/lyx/manual.lyx").getText("UTF-8")
	content = content.replaceAll("@!identifier!@", "${manualIdentifier}")
	new File("${buildTempLyx}/manual-${version}.lyx").write(content, "UTF-8")

	copy {
		from "${projectDir}/src/main/lyx/references.bib"
		into "${buildTempLyx}"
	}
	copy {
		from "${projectDir}/src/main/resources"
		into "${buildTemp}/resources"
	}

	exec() {
		executable = "lyx"
		workingDir = "${buildTempLyx}"
		args = ["-e", "pdf2", "manual-${version}.lyx"]
	}

	copy {
		from "${buildTemp}/lyx/manual-${version}.pdf"
		into "${buildDoc}"

		rename { String fileName ->
			fileName.replace("manual.lyx", "manual-${version}.pdf")
		}
	}
}

task export(dependsOn: buildManual) << {
	def exportBaseDir = new File(rootProject.buildDir, "package/${identifier}")
	exportBaseDir.mkdirs()

	// Copy the manual.
	copy {
		from("${buildDir}/doc") {
			include "*.pdf"
		}
		into "${exportBaseDir}"
	}

/*
	def exportSourceDir = new File(exportBaseDir, "source/${project.name}")
	exportSourceDir.mkdirs()

	// Copy the sources.
	copy {
		from(".") {
			include "src/**"
			include "*.gradle"
			exclude ".gradle"
		}
		into "${exportSourceDir}"
		filter(ReplaceTokens, tokens: [
			__identifier__: identifier,
			__year__: copyrightYear
		])
	}
*/
}

task clean << {
	buildDir.deleteDir()
}

