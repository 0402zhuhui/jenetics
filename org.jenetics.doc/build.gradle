/*
 * Java Genetic Algorithm Library (@__identifier__@).
 * Copyright (c) @__year__@ Franz Wilhelmstötter
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 *
 * Author:
 *   Franz Wilhelmstötter (franz.wilhelmstoetter@gmx.at)
 *
 */

import java.text.SimpleDateFormat
import java.util.Date

import org.apache.tools.ant.filters.ReplaceTokens

/**
 * @author <a href="mailto:franz.wilhelmstoetter@gmx.at">Franz Wilhelmstötter</a>
 * @since 1.2
 * @version 1.4 &mdash; <em>$Date$</em>
 */

apply from: "${rootDir}/commons.gradle"

task buildManual {
	inputs.dir file('src/main')
	outputs.file file("${buildDir}/doc/manual-${version}.pdf")
	
	def encoding = 'UTF-8'
	def manualFile = file("${projectDir}/src/main/lyx/manual.lyx")
	def buildTemp = file("${buildDir}/tmp")
	def buildTempLyx = file("${buildTemp}/lyx")
	def buildDoc = file("${buildDir}/doc")

	// Copy the needed files to the temporary working directory.
	doFirst {
		buildTempLyx.mkdirs()
		buildDoc.mkdirs()
		
		def content = file(manualFile).getText(encoding).replaceAll(
			'@!identifier!@', "${manualIdentifier}"
		)
		
		file("${buildTempLyx}/manual-${version}.lyx").write(
			content, 
			encoding
		)
		
		copy {
			from "${projectDir}/src/main/lyx/references.bib"
			into "${buildTempLyx}"
		}
		copy {
			from "${projectDir}/src/main/resources"
			into "${buildTemp}/resources"
		}
	}
	
	// Performt the lyx -> pdf conversion.
	doLast {
		exec() {
			executable = "lyx"
			workingDir = "${buildTempLyx}"
			args = ["-e", "pdf2", "manual-${version}.lyx"]
		}
	
		copy {
			from "${buildTemp}/lyx/manual-${version}.pdf"
			into "${buildDoc}"
	
			rename { String fileName ->
				fileName.replace("manual.lyx", "manual-${version}.pdf")
			}
		}
	}
	
}

export.dependsOn(buildManual)
export.doLast {
	// Copy the manual.
	copy {
		from("${buildDir}/doc") {
			include "*.pdf"
		}
		into "${exportDir}"
	}
}

task clean << {
	buildDir.deleteDir()
}

