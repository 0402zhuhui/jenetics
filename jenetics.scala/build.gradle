/*
 * Java Genetic Algorithm Library (@__identifier__@).
 * Copyright (c) @__year__@ Franz Wilhelmstötter
 *
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:
 *    Franz Wilhelmstötter (franz.wilhelmstoetter@gmail.com)
 */

/**
 * @author <a href='mailto:franz.wilhelmstoetter@gmail.com'>Franz Wilhelmstötter</a>
 * @since !__version__!
 * @version !__version__!
 */

plugins {
    id 'me.champeau.gradle.jmh' version '0.4.4'
}

apply plugin: 'packaging'
apply plugin: 'nexus'

description = 'Jenetics Scala Wrapper'

compileTestJava.dependsOn tasks.getByPath(':jenetics:compileTestJava')

repositories {
	mavenCentral()
	jcenter()
}

dependencies {
	compile 'org.scala-lang:scala-library:2.12.3'
	compile project(':jenetics')

	compile 'org.scalatest:scalatest_2.12:3.0.1'
}

jar.manifest.instruction('Export-Package',
	'io.jenetics.scala'
)

jar.manifest.attributes('Automatic-Module-Name': 'io.jenetics.scala')

javadoc {
	options {
		links 'http://jenetics.io/javadoc/jenetics'
	}
}

packaging {
	name = 'Jenetics Scala Wrapper'
	author = 'Franz Wilhelmstötter'
	url = 'http://jenetics.io'

	jarjar = false
	javadoc = true
}

modifyPom {
	project {
		name 'jenetics.ext'
		description 'Jenetics Scala Wrapper'
		url jenetics.url
		inceptionYear '2017'

		scm {
			url jenetics.maven.scm.url
			connection jenetics.maven.scm.connection
			developerConnection jenetics.maven.scm.developer_connection
		}

		licenses {
			license {
				name 'The Apache Software License, Version 2.0'
				url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
				distribution 'repo'
			}
		}

		developers {
			developer {
				id 'jenetics'
				name 'Franz Wilhelmstötter'
				email 'franz.wilhelmstoetter@gmail.com'
			}
		}
	}
}

nexus {
	identifier = project.identifier
	copyrightYear = project.copyrightYear
	attachSources = true
	attachTests = false
	attachJavadoc = true
	sign = true
	repository = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
	snapshotRepository = 'https://oss.sonatype.org/content/repositories/snapshots'
}

tasks.withType(ScalaCompile) {
	scalaCompileOptions.additionalParameters = [
		'-deprecation',
		'-encoding', 'utf-8',
		'-explaintypes',
		'-feature',
		'-language:existentials',
		'-language:experimental.macros',
		'-language:higherKinds',
		'-language:implicitConversions',
		'-unchecked',
		'-Xcheckinit',
		'-Xfatal-warnings',
		'-Xfuture',
		'-Xlint:adapted-args',
		'-Xlint:by-name-right-associative',
		'-Xlint:constant',
		'-Xlint:delayedinit-select',
		'-Xlint:doc-detached',
		'-Xlint:inaccessible',
		'-Xlint:infer-any',
		'-Xlint:missing-interpolator',
		'-Xlint:nullary-override',
		'-Xlint:nullary-unit',
		'-Xlint:option-implicit',
		'-Xlint:package-object-classes',
		'-Xlint:poly-implicit-overload',
		'-Xlint:private-shadow',
		'-Xlint:stars-align',
		'-Xlint:type-parameter-shadow',
		'-Xlint:unsound-match',
		'-Yno-adapted-args',
		'-Ypartial-unification',
		'-Ywarn-dead-code',
		'-Ywarn-extra-implicit',
		'-Ywarn-inaccessible',
		'-Ywarn-infer-any',
		'-Ywarn-nullary-override',
		'-Ywarn-nullary-unit',
		'-Ywarn-numeric-widen',
		//'-Ywarn-unused:implicits',
		//'-Ywarn-unused:imports',
		'-Ywarn-unused:locals',
		//'-Ywarn-unused:params',
		'-Ywarn-unused:patvars',
		//'-Ywarn-unused:privates',
		'-Ywarn-value-discard'
	]
}
