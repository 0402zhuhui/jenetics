Jenetics-0.3.1.0
- Deleting ConcurrentStatisticCalculator
- Adding concurrence support on the level of the fitness calculation of the
  phenotypes of the population. This will the job of the 
  (Concurrent)Evaluator.
- CharacterChromosome implements java.lang.CharSequence interface.
- Adding method org.jenetics.util.Array.subArray(start, end).
- Adding timer which measures the time spend for selecting, altering and 
  calculating the fitness of a population.

Jenetics-0.3.0.0
- Adding javadoc to exported zip file.
- Moving classes 
     * Array
     * ArrayIterator
     * ArrayUtils
     * BitUtils
     * Probability
     * Validator
  into new org.jenetics.util package.
- Changing interface 'FitnessFunction'. It converts a given Genotyp<G> to an
  (more general) java.lang.Comparable instead of a double value. An additional
  generic parameter (C extends Comparable<C>) was therefor introduced in the
  FitnessScaler, Phenotype, Population, Selector and GeneticAlgorithm class.
- Adding NumericStatistic and NumericStatisticCalculator. Move functionality
  from old Statistic class into the new NumericStatistic class. 
- Some additional helper methods in the ArrayUtils class.
- Remove method CharacterGene.getCharacter(), use CharacterGene.getAllele() 
  instead.
- adding interface org.jenetics.util.Copyable.
- Streamline XML-Serialization.
- Streamline toString methods and examples.

Jenetics-0.2.0.0
- Removing Randomizable interface.
- Changing the template method return value of the 
  ProbabilitySelector.probabilities(Population<T>,int) from
  Probabilities[] to double[].
- Replace array types (e.g. IntegerGene[]) with Array<T> class
  (e.g. Array<IntegerGene>). This moves all the 'unchecked' stuff in the new
  Array class.
- Only add valid phenotypes to surviving phenotypes.
- Caching the isValid value in AbstractChromosome and Genotype.
- Rename util class org.jenetics.Arrays to org.jenetics.ArrayUtils.
- Adding StatisticTest class.
- Adding the (shortcut)method Genotype.getGene()
- Adding the method Chromosome.getGene() to the Chromosome interface.
- Adding the ConcurrentStatisticCalculator class.
- Making the StatisticsCalculator class public.

Jenetics-0.1.0.4
- Adding @Override annotation where possible.
- The factory method IntegerGene.valueOf(long min, long max) and
  the DoubleGene.valueOf(double min, double max) now creates a Gene with a random value
  within the given range. Adding comments to this methods.

Jenetics-0.1.0.3
- Using javolution.context.LocalContext.Reference in RandomRegistry.
- New version of the private PermutationChromosome.randomize method.
- Adding private helper class Arrays.

