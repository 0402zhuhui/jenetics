Jenetics-0.5.1.0
- Add org.jenetics.util.Predicates which contains some general purpose predicates
  like Not, And, Or, Nil.
- Add incremental Quantile class.
- Add ConverterAdapter class.
- Removed Genotype.chromosomes() method. Use Genotype.length() instead.
- Add Accumulator classes for statistics calculation.
- Rename org.jenetics.utils.Serializer to org.jenetics.utils.IOUtils.
- Change method signature from ArrayUtils.foreach(Collection) to 
  ArrayUtils.foreach(Iterable).
- Add Array.toArray() and Array.toArray(Object[]) methods.
- Add 'divide' method to Float64Gene and Integer64Gene.
- Add factory methods CharSet.valueOf(CharSequence) and CharSet.valueOf(char, char).

Jenetics-0.5.0.0
- Rename Validator.notNull() to Validator.nonNull(). It's the same name as in the
  new Objects.nonNull() method in Java 1.7.
- Remove the org.jenetics.Propability class. It's not worth the effort.
- Refactoring of the Alterer class. The Alterer is now an interface with one
  "alter" method. To combine different alterers to one alterer you have to use
  the CompositeAlterer class.
- Rename Mutation to Mutator.
- Rename DoubleGene(Chromosome) to Float64Gene(Chromosome).
- Rename IntegerGene(Chromosome) to Integer64Gene(Chromosome).
- Rename org.jenetics.util.XMLSerializer to org.jenetics.util.Serializer.
- Move Mean class from org.jenetics to org.jenetics.util package.
- Rename PowerScaler to ExponentialScaler.
- Add new selector, MonteCarloSelector. This selector can be used to evaluate 
  the performance of an other selector.
- Rename GeneticAlgorithm.getBestStatistic() method to 
  GeneticAlgorithm.getBestStatistics()
- Change org.jenetics.util.Timer to nano second resolution.
- Rename method Statistics.getTimes() to Statistics.getTime().
- Replace the Statistics.Time properties with "final" javolution.lang.References.
  Instead of statistics.getTimes().getAlterTime() you write statistics.getTimes().alter.get().
- Adding fork-join library from Doug Lea and ForkJoinEvaluator.
- Adding UmlGraph for javadoc generation.
- Making the Array class cloneable.
- Fix external javadoc references in build script.
- The characters which are used by the CharacterGene can now be changed.
- Adding adapter class for jscience Function object.
- Adding method getParallelTasks to Evaluator interface.
- The GeneticAlgorithm.getLock() method now returns a fair lock.
- Make the static helper method ArrayUtils.asList() a member method of the Array 
  class.
- Make the Array class Serializable.
- Making the StatisticsCalculator a static inner class of the Statistics.

Jenetics-0.4.0.1
- Fix bug in the GeneticAlgoritm.setPopulation/setGenotypes function. The
  fitness scaler was not set.
- The examples are packed in separate jar file (Jenetics-examples-<version>.jar).
- Some Fixing javadoc.

Jenetics-0.4.0.0
- Remove the survivor fraction probability from the GA. This can lead to 
  inconsistencies with the offspring fraction. The survivor fraction is deduced
  from the offspring fraction (sf := 1 - of).
- Adding additional example.
- Removing the static factory methods from the Array class.
- Refactoring GA statistic classes.
- Adding TruncationSelector.
- Adding SwapMutation class, needed for TSP (and other combinatorial) problem.
- Rename NumberGene.getMinValue() to NumberGene.getMaxValue() to 
  NumberGene.getMin() and NumberGene.getMax().
- Remove the mutation method from the Chromosomes interface. The mutation is
  solely done by the Mutation class. This requires a new method in the Gene
  interface, Gene.newInstance(). To not be forced to cast the newly generated
  gene to its concrete type, an additional type parameter has been added to the
  Gene interface. As side effect, no @SuppressWarnin annotation are needed.
- Adding GaussianMutation class.
- Fixing Mutation class. After an previous refactoring no mutation was performed.
- Fixing mutation probability calculation in Mutation class.
- Making mutation a little bit faster.
- The methods of the Array class throw an ArrayIndexOutOfBoundsException instead
  of an IndexOutOfBoundsException.
- Fixing again bugs in the Array(Utils) class concerning the sealed state.
- Adding ArrayUtils.sealedArray() method.
- Rename Chromosome.getGenes() to Chromosome.toArray().
- Making all method parameters final.

Jenetics-0.3.2.1
- Adding and extending javadoc comments.
- Finish NumericStatistic/Calculator implementation.
- Fixing minor flaws of the Arrays sealed state.
- Adding method Array.subArray(int, int).
- Generalize the method Array.clear() to Array.fill(T value).

Jenetics-0.3.2.0
- The PropabilitySelector no longer sorts the population before calling the
  ProbabilitySelector.probabilities() method. The subclass must sort the
  population if needed.
- Move Verifiyble interface to util package.
- Change signature of the Alterer.alter(Population, int) method. Adding the
  generation of the altered phenotype.
- Add new abstract Alterer class Recombination.
- Move RandomRegistry into org.jenetics.util package.
- Add org.jenetics.util.EvaluatorRegistry class.
- Parallelize the recombination in the Recombination class.

Jenetics-0.3.1.0
- Deleting ConcurrentStatisticCalculator
- Adding concurrence support on the level of the fitness calculation of the
  phenotypes of the population. This will the job of the 
  (Concurrent)Evaluator.
- CharacterChromosome implements java.lang.CharSequence interface.
- Adding method org.jenetics.util.Array.subArray(start, end).
- Adding timer which measures the time spend for selecting, altering and 
  calculating the fitness of a population.

Jenetics-0.3.0.0
- Adding javadoc to exported zip file.
- Moving classes 
     * Array
     * ArrayIterator
     * ArrayUtils
     * BitUtils
     * Probability
     * Validator
  into new org.jenetics.util package.
- Changing interface 'FitnessFunction'. It converts a given Genotyp<G> to an
  (more general) java.lang.Comparable instead of a double value. An additional
  generic parameter (C extends Comparable<C>) was therefor introduced in the
  FitnessScaler, Phenotype, Population, Selector and GeneticAlgorithm class.
- Adding NumericStatistic and NumericStatisticCalculator. Move functionality
  from old Statistic class into the new NumericStatistic class. 
- Some additional helper methods in the ArrayUtils class.
- Remove method CharacterGene.getCharacter(), use CharacterGene.getAllele() 
  instead.
- adding interface org.jenetics.util.Copyable.
- Streamline XML-Serialization.
- Streamline toString methods and examples.

Jenetics-0.2.0.0
- Removing Randomizable interface.
- Changing the template method return value of the 
  ProbabilitySelector.probabilities(Population<T>,int) from
  Probabilities[] to double[].
- Replace array types (e.g. IntegerGene[]) with Array<T> class
  (e.g. Array<IntegerGene>). This moves all the 'unchecked' stuff in the new
  Array class.
- Only add valid phenotypes to surviving phenotypes.
- Caching the isValid value in AbstractChromosome and Genotype.
- Rename util class org.jenetics.Arrays to org.jenetics.ArrayUtils.
- Adding StatisticTest class.
- Adding the (shortcut)method Genotype.getGene()
- Adding the method Chromosome.getGene() to the Chromosome interface.
- Adding the ConcurrentStatisticCalculator class.
- Making the StatisticsCalculator class public.

Jenetics-0.1.0.4
- Adding @Override annotation where possible.
- The factory method IntegerGene.valueOf(long min, long max) and
  the DoubleGene.valueOf(double min, double max) now creates a Gene with a random value
  within the given range. Adding comments to this methods.

Jenetics-0.1.0.3
- Using javolution.context.LocalContext.Reference in RandomRegistry.
- New version of the private PermutationChromosome.randomize method.
- Adding private helper class Arrays.

