<?xml version="1.0" encoding="UTF-8"?>
<!-- 
 ###############################################################################
 #
 # Java Genetic Algorithm Library (@!identifier!@).
 # Copyright (c) @!year!@ Franz Wilhelmstötter
 #  
 # This library is free software; you can redistribute it and/or
 # modify it under the terms of the GNU Lesser General Public
 # License as published by the Free Software Foundation; either
 # version 2.1 of the License, or (at your option) any later version.
 # 
 # This library is distributed in the hope that it will be useful,
 # but WITHOUT ANY WARRANTY; without even the implied warranty of
 # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 # Lesser General Public License for more details.
 # 
 # You should have received a copy of the GNU Lesser General Public
 # License along with this library; if not, write to the Free Software
 # Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 #
 # Author:
 #     Franz Wilhelmstötter (franz.wilhelmstoetter@gmx.at)
 #
 # Version: 
 #     $Id$
 #     
 ############################################################################### 
-->
<project default="all">
	<property name="version" value="0.9.0.0" />
	<property name="identifier" value="jenetics-${version}" />
	<property name="year" value="2007-2012" />
	
	<property name="basedir" value="." />
	<property name="source.basedir" value="${basedir}/src" />
	<property name="doc.basedir" value="${basedir}/doc" />
	<property name="lib.dir" value="./lib" />
	<property name="build.dir" value="./build/main" />
	<property name="test.build.dir" value="./build/test" />
	
	<property name="source.dir" value="${source.basedir}/main/java" />
	<property name="testng.source.dir" value="${source.basedir}/test/java" />
	<property name="testng.resource.dir" value="${source.basedir}/test/resources" />
	<property name="example.dir" value="${source.basedir}/example/java" />
	<property name="tool.dir" value="${source.basedir}/tool/java" />
	<property name="testng.report.dir" value="${build.dir}/testng-report" />
	<property name="lib.build.dir" value="${lib.dir}/build" />
	<property name="export.dir" value="${build.dir}/export/${identifier}" />
	<property name="javadoc.dir" value="${build.dir}/javadoc" />
	<property name="jscience.classpath" value="${lib.dir}/jscience-4.3.1.jar" />
	<property name="colorizer.jar" value="${lib.dir}/build/colorizer.jar" />
	<property name="umlgraph.classpath" value="${lib.dir}/build/UmlGraph-5.3.jar" />
	<property name="java2html.classpath" value="${lib.dir}/build/ant-java2html.jar" />
	
	<property name="jdk.source" value="1.7" />
	<property name="jdk.target" value="1.7" />

	<path id="classpath">
		<fileset dir="${lib.dir}" >
			<include name="*.jar" />
		</fileset>
	</path>

	<path id="build.classpath">
		<fileset dir="${lib.build.dir}" >
			<include name="*.jar" />
		</fileset>
	</path>

	<taskdef resource="testngtasks" classpathref="build.classpath" />
	
	<!--
	    Compile the project sources.
	-->
	<target name="compile">
		<mkdir dir="${build.dir}" />
		<javac destdir="${build.dir}" 
			srcdir="${source.dir}" 
			debug="true" 
			source="${jdk.source}" 
			target="${jdk.target}" 
			encoding="UTF-8" 
			listfiles="yes"
			includeantruntime="no"
		>
			<compilerarg value="-Xlint:unchecked" />
			<compilerarg value="-Xlint:deprecation" />
			<classpath refid="classpath" />
			<include name="org/jenetics/*.gif" />
			<include name="org/jenetics/*.html" />
			<include name="org/jenetics/*.java" />
			<include name="org/jenetics/util/*.java" />
			<include name="org/jenetics/stat/*.java" />
		</javac>		
	</target>
	
	<target name="compile-example" depends="compile">
		<mkdir dir="${build.dir}" />
		<javac destdir="${build.dir}" 
			srcdir="${example.dir}" 
			debug="true" 
			source="${jdk.source}" 
			target="${jdk.target}" 
			encoding="UTF-8" 
			listfiles="yes"
			includeantruntime="no"
		>
			<compilerarg value="-Xlint:unchecked" />
			<compilerarg value="-Xlint:deprecation" />
			<classpath refid="classpath" />
			<include name="org/jenetics/examples/*.java" />
			<include name="org/jenetics/performance/*.java" />
		</javac>		
	</target>	
	
	<!--
	    Build jar packages from the sources:
	    * jenetics-<version>.jar: 
	          Contains only the project classes without depending external jars 
	          but without tests and examples.
	    * jenetics-all-<version>.jar:
	          Contains project classes with depending external jars but without
	          tests and examples.
	    * jenetics-examples-<version>.jar
	          Contains only the example classes.
	-->
	<target name="jar" depends="clean, compile, compile-example">
		<tstamp>
			<format property="JAR_TIMESTAMP" pattern="yyyy-MM-dd HH:mm" />
		</tstamp>
		
		<!--
		 # Build without the library dependencies.
		-->
		<jar 
			destfile="${build.dir}/${identifier}.jar" 
			filesetmanifest="mergewithoutmain" 
			index="true" 
			update="true" 
			level="9" 
			duplicate="preserve"
		>
			<fileset dir="${build.dir}" >
				<exclude name="org/jenetics/examples/*" />
				<exclude name="org/jenetics/performance/*" />
				<exclude name="org/jenetics/**/doc-files/*" />
				<exclude name="*.jar" />
				<include name="**/*.class" />
			</fileset>
			<manifest>
				<attribute name="ProjectName" value="jenetics" />
				<attribute name="Version" value="${version}" />
				<attribute name="Vendor" value="Franz Wilhelmstötter" />
				<attribute name="Maintainer" value="Franz Wilhelmstötter" />
				<attribute name="Implementation-URL" value="http://jenetics.sourceforge.net" />
				<attribute name="Implementation-Vendor" value="Jenetics" />
				<attribute name="Implementation-Version" value="${JAR_TIMESTAMP}" />
			</manifest>
		</jar>
		
		<!--
		 # Build with the library dependencies.
		-->		
		<jar 
			destfile="${build.dir}/${identifier}-all.jar" 
			filesetmanifest="mergewithoutmain" 
			index="true" 
			update="true" 
			level="9" 
			duplicate="preserve"
		>
			<zipfileset src="${jscience.classpath}" />
			<fileset dir="${build.dir}" >
				<exclude name="org/jenetics/examples/*" />
				<exclude name="org/jenetics/performance/*" />
				<exclude name="*.jar" />
				<include name="**/*.class" />
			</fileset>
			<manifest>
				<attribute name="ProjectName" value="jenetics" />
				<attribute name="Version" value="${version}" />
				<attribute name="Vendor" value="Franz Wilhelmstötter" />
				<attribute name="Maintainer" value="Franz Wilhelmstötter" />
				<attribute name="Implementation-URL" value="http://jenetics.sourceforge.net" />
				<attribute name="Implementation-Vendor" value="Jenetics" />
				<attribute name="Implementation-Version" value="${JAR_TIMESTAMP}" />
			</manifest>
		</jar>	
		
		<!--
		 # Build the examples
		-->		
		<jar 
			destfile="${build.dir}/${identifier}-examples.jar" 
			filesetmanifest="mergewithoutmain" 
			index="true" 
			update="true" 
			level="9" 
			duplicate="preserve"
		>
			<fileset dir="${build.dir}" >
				<include name="org/jenetics/examples/*" />
				<include name="org/jenetics/performance/*" />
				<exclude name="*.jar" />
			</fileset>
			<manifest>
				<attribute name="ProjectName" value="jenetics examples" />
				<attribute name="Version" value="${version}" />
				<attribute name="Vendor" value="Franz Wilhelmstötter" />
				<attribute name="Maintainer" value="Franz Wilhelmstötter" />
				<attribute name="Implementation-URL" value="http://jenetics.sourceforge.net" />
				<attribute name="Implementation-Vendor" value="Jenetics" />
				<attribute name="Implementation-Version" value="${JAR_TIMESTAMP}" />
			</manifest>
		</jar>		
	</target>

	<!--
	 # Creates the javadoc from the project sources.
	-->
	<target name="javadoc">
		<tstamp>
			<format property="JAVADOC_TIMESTAMP" pattern="yyyy-MM-dd HH:mm" />
		</tstamp>	
		<javadoc 
			classpathref="classpath" 
			destdir="${javadoc.dir}" 
			author="true" 
			version="true" 
			use="true" 
			linksource="yes" 
			source="${jdk.source}" 
			useexternalfile="true" 
			access="protected" 
			breakiterator="yes" 
			windowtitle="Jenetics API ${version}" 
			failonerror="false" 
			includenosourcepackages="true" 
			docencoding="UTF-8" 
			Encoding="UTF-8"
			stylesheetfile="./doc/site/stylesheet.css"
		>
			<arg line="-charset UTF-8" />
			<classpath refid="classpath" />
			<fileset dir="${source.dir}">
				<include name="org/jenetics/**/*.gif" />
				<include name="org/jenetics/*.html" />
				<include name="org/jenetics/*.java" />
				<include name="org/jenetics/util/*.java" />
				<include name="org/jenetics/stat/*.java" />
				<and>
					<filename name="**/*.java" />
				</and>
			</fileset>
			<doctitle>&lt;h1&gt;Jenetics API (Version ${version})&lt;/h1&gt;</doctitle>
			<bottom>Franz Wilhelmstötter  &amp;nbsp;&lt;i&gt;(${JAVADOC_TIMESTAMP})&lt;/i&gt;</bottom>
			<link offline="false" href="http://download.oracle.com/javase/7/docs/api/" />
			<link offline="false" href="http://jscience.org/api/" />
			<link offline="false" href="http://javolution.org/target/site/apidocs/" />
		</javadoc>

		<!-- Formats/colarizes code between [code]...[/code] -->
		<java jar="${colorizer.jar}" fork="true">
			<arg value="${javadoc.dir}" />
		</java>
		
		<taskdef 
			name="java2html" classname="de.java2html.anttasks.Java2HtmlTask"
			classpath="${java2html.classpath}"
		/>		
		<java2html 
			srcdir="${source.dir}"
			destdir="${javadoc.dir}/src-html"
			style="eclipse" 
			showLineNumbers="true" 
			showFileName="true"
			tabs="4" 
			showTableBorder="true" 
			outputFormat="html"
			useShortFileName="true" 
			overwrite="true"
		>
			<include name="org/jenetics/**/*.gif" />
			<include name="org/jenetics/*.html" />
			<include name="org/jenetics/*.java" />
			<include name="org/jenetics/examples/*.java" />
			<include name="org/jenetics/util/*.java" />
			<include name="org/jenetics/stat/*.java" />
		</java2html>
			
		<copy todir="${javadoc.dir}/org/jenetics/doc-files" >
			<fileset dir="${source.dir}/org/jenetics/doc-files" />
		</copy>
		<copy todir="${javadoc.dir}/org/jenetics/stat/doc-files" >
			<fileset dir="${source.dir}/org/jenetics/stat/doc-files" />
		</copy>		
		<copy todir="${javadoc.dir}/org/jenetics/util/doc-files" >
			<fileset dir="${source.dir}/org/jenetics/util/doc-files" />
		</copy>			
		<replace dir="${javadoc.dir}" token="@!identifier!@" value="${identifier}" />
		<replace dir="${javadoc.dir}" token="@!year!@" value="${year}" />
	</target>
	
	<!--
	    Create the javadoc with UML graphs from the project sources.
	-->
	<target name="javadoc-uml">
		<tstamp>
			<format property="JAVADOC_TIMESTAMP" pattern="yyyy-MM-dd HH:mm" />
		</tstamp>	
		<javadoc 
			classpathref="classpath" 
			destdir="${javadoc.dir}" 
			author="true" 
			version="true" 
			use="true" 
			linksource="yes" 
			source="${jdk.source}" 
			useexternalfile="true" 
			access="protected" 
			breakiterator="yes" 
			windowtitle="Jenetics API ${version}" 
			failonerror="false" 
			includenosourcepackages="true" 
			docencoding="UTF-8" 
			Encoding="UTF-8"
			stylesheetfile="./doc/site/stylesheet.css"
		>
			<arg line="-charset UTF-8" />
			<classpath refid="classpath" />
			<doclet name="org.umlgraph.doclet.UmlGraphDoc" path="${umlgraph.classpath}">
				<param name="-shape" value="class" />
				<param name="-author" value="true" />
				<param name="-version" value="true" />
				<param name="-linksource" />
				<param name="-inferrel" />
				<param name="-inferdep" />
				<param name="-hide" value="java.*" />
				<param name="-hide" value="javolution.*" />
				<param name="-collpackages" value="java.util.*" />
				<param name="-collpackages" value="org.jenetics.util.*" />
				<param name="-qualify" />
				<param name="-postfixpackage" />
				<param name="-nodefontsize" value="9" />
				<param name="-nodefontpackagesize" value="7" />
				<param name="-collapsible" value="true" />
			</doclet>
			<fileset dir="${source.dir}">
				<include name="org/jenetics/**/*" />
				<include name="org/jenetics/*.html" />
				<include name="org/jenetics/*.java" />
				<include name="org/jenetics/examples/*.java" />
				<include name="org/jenetics/util/*.java" />
				<include name="org/jenetics/stat/*.java" />
				<and>
					<filename name="**/*.java" />
				</and>
			</fileset>
			<doctitle>&lt;h1&gt;Jenetics API (Version ${version})&lt;/h1&gt;</doctitle>
			<bottom>Franz Wilhelmstötter  &amp;nbsp;&lt;i&gt;(${JAVADOC_TIMESTAMP})&lt;/i&gt;</bottom>
			<link offline="false" href="http://download.oracle.com/javase/6/docs/api/" />
			<link offline="false" href="http://jscience.org/api/" />
			<link offline="false" href="http://javolution.org/target/site/apidocs/" />
		</javadoc>

		<!-- Formats/colarizes code between [code]...[/code] -->
		<java classname="Colapi" classpath="${colorizer.classpath}" >
			<arg value="${javadoc.dir}" />
		</java>
		
		<taskdef 
			name="java2html" classname="de.java2html.anttasks.Java2HtmlTask"
			classpath="${java2html.classpath}"
		/>		
		<java2html 
			srcdir="${source.dir}"
			destdir="${javadoc.dir}/src-html"
			style="eclipse" 
			showLineNumbers="true" 
			showFileName="true"
			tabs="4" 
			showTableBorder="true" 
			outputFormat="html"
			useShortFileName="true" 
			overwrite="true"
		>
			<include name="org/jenetics/**/*.gif" />
			<include name="org/jenetics/*.html" />
			<include name="org/jenetics/*.java" />
			<include name="org/jenetics/examples/*.java" />
			<include name="org/jenetics/util/*.java" />
			<include name="org/jenetics/stat/*.java" />
		</java2html>
		<copy todir="${javadoc.dir}/org/jenetics/doc-files" >
			<fileset dir="${source.dir}/org/jenetics/doc-files" />
		</copy>
		<copy todir="${javadoc.dir}/org/jenetics/stat/doc-files" >
			<fileset dir="${source.dir}/org/jenetics/stat/doc-files" />
		</copy>		
		<copy todir="${javadoc.dir}/org/jenetics/util/doc-files" >
			<fileset dir="${source.dir}/org/jenetics/util/doc-files" />
		</copy>	
		<replace dir="${javadoc.dir}" token="@!identifier!@" value="${identifier}" />
		<replace dir="${javadoc.dir}" token="@!year!@" value="${year}" />
	</target>

	<target name="all" depends="jar, javadoc, test" />

	<!--
	    Compiles the project unit tests.
	-->
	<target name="compile-tests" depends="compile">
		<mkdir dir="${test.build.dir}" />
		<copy todir="${test.build.dir}/org/jenetics/util" >
			<fileset file="${testng.source.dir}/org/jenetics/util/*.txt" />
		</copy>		
		<javac destdir="${test.build.dir}" 
			srcdir="${testng.source.dir}" 
			debug="true"
			debuglevel="lines,vars,source"
			source="${jdk.source}" 
			target="${jdk.target}" 
			encoding="UTF-8" 
			listfiles="yes"
			includeantruntime="no"
		>
			<compilerarg value="-Xlint:unchecked" />
			<compilerarg value="-Xlint:deprecation" />
			<classpath refid="classpath" />
			<classpath refid="build.classpath" />
			<classpath path="${build.dir}" />
			<include name="org/jenetics/*.gif" />
			<include name="org/jenetics/*.html" />
			<include name="org/jenetics/*.java" />
			<include name="org/jenetics/util/*.java" />
			<include name="org/jenetics/stat/*.java" />
		</javac>			
	</target>

	<!--
	    Executes the projects unit tests.
	-->
	<target name="test" depends="compile-tests">
		<mkdir dir="${testng.report.dir}" />
		<testng 
			outputdir="${testng.report.dir}"
			haltonfailure="true" 
			dumpCommand="false"
			suitename="Jenetics Tests"
			excludedgroups="performance"
			verbose="2"
		>
			<classpath refid="classpath" />
			<classpath refid="build.classpath" />
			<classpath path="${build.dir}" />
			<classpath path="${test.build.dir}" />
			<classpath path="${testng.resource.dir}" />
			<xmlfileset dir="${testng.source.dir}/org/jenetics" includes="testng.xml" />
			<!--<classfileset dir="${build.dir}" includes="**/*.class" />-->
		</testng>
		
		<copy 
			file="${testng.report.dir}/emailable-report.html"
			tofile="${basedir}/test-report.html"
		/>
	</target>
	
	<!--
	    Deletes the build directory.
	-->
	<target name="clean" >
		<delete dir="${build.dir}" />
		<delete dir="${test.build.dir}" />
		<delete dir="${javadoc.dir}" />
		<delete dir="export" />
		<delete dir="test-output" />
		<delete dir="bin" />
		<delete dir="${testng.report.dir}" />
		<delete>
			<fileset dir="${basedir}" includes="*.pdf"/>
			<fileset dir="${basedir}" includes="${identifier}*.jar"/>
			<fileset dir="${basedir}" includes="temp-testng-*"/>
		</delete>
	</target>
	
	<target name="clean-all" depends="clean">
		<delete>
			<fileset dir="${basedir}" includes="test-report.html"/>
		</delete>
	</target>
	
	<target name="run-perftest" depends="compile-example">
		<java 
			classname="org.jenetics.performance.PerformanceTests"
			output="${basedir}/perftest-report.txt"
			fork="yes"
		>
			<classpath >
				<pathelement path="${build.dir}" />
			</classpath>
			<classpath refid="classpath" />
			<!--<jvmarg value="-XX:AggressiveOpts"/>-->
		</java>
	</target>
	
	<target name="manual">
		<exec executable="lyx" failifexecutionfails="false" >
			<arg value="-e"/>
			<arg value="pdf"/>
			<arg value="${doc.basedir}/documentation/manual.lyx"/>
		</exec>
		<copy 
			file="${doc.basedir}/documentation/manual.pdf"
			tofile="${basedir}/manual-${version}.pdf"
		/>
	</target>
	
	<!--
	    Exports the project. Executes all tests and build a ready to deploy zip
	    file.
	-->
	<target name="export" >
		<antcall target="clean-all" />
		<antcall target="test" />
		<antcall target="clean" />
		<antcall target="jar" />
		<antcall target="javadoc" />
		<antcall target="run-perftest" />
		<antcall target="manual" />
		
		<mkdir dir="${export.dir}/src"/>
		<copy todir="${export.dir}/src" >
			<fileset dir="${source.basedir}" />
		</copy>
		<replace dir="${export.dir}/src" token="@!identifier!@" value="${identifier}" />
		<replace dir="${export.dir}/src" token="@!year!@" value="${year}" />
		
		<mkdir dir="${export.dir}/lib"/>
		<copy todir="${export.dir}/lib" >
			<fileset dir="${lib.dir}" />
		</copy>
		
		<mkdir dir="${export.dir}/javadoc"/>
		<copy todir="${export.dir}/javadoc" >
			<fileset dir="${javadoc.dir}" />
		</copy>	
		
		<copy todir="${export.dir}" file="manual-${version}.pdf"/>
		<copy todir="${export.dir}" file="BUILD.txt"/>
		<copy todir="${export.dir}" file="build.xml"/>
		<copy todir="${export.dir}" file="change.log"/>
		<copy todir="${export.dir}" file="LGPL.txt"/>
		<copy todir="${export.dir}" file="README"/>
		<copy todir="${export.dir}" file="Jenetics.iml"/>
		<copy todir="${export.dir}" file="Jenetics.ipr"/>
		<copy todir="${export.dir}" file="Jenetics.iws"/>
		<copy todir="${export.dir}" file="run-examples.sh"/>
		<copy todir="${export.dir}" file="${basedir}/test-report.html"/>
		<copy todir="${export.dir}" file="${basedir}/perftest-report.txt"/>
		<copy todir="${export.dir}/build" file="${build.dir}/${identifier}.jar"/>
		<copy todir="${export.dir}/build" file="${build.dir}/${identifier}-all.jar"/>
		<copy todir="${export.dir}/build" file="${build.dir}/${identifier}-examples.jar"/>
		
		<replace file="${export.dir}/BUILD.txt" token="@!identifier!@" value="${identifier}" />
		<replace file="${export.dir}/BUILD.txt" token="@!year!@" value="${year}" />
		<replace file="${export.dir}/build.xml" token="@!identifier!@" value="${identifier}" />
		<replace file="${export.dir}/build.xml" token="@!year!@" value="${year}" />		
		<replace file="${export.dir}/change.log" token="@!identifier!@" value="${identifier}" />
		<replace file="${export.dir}/change.log" token="@!year!@" value="${year}" /> 
		<replace file="${export.dir}/README" token="@!identifier!@" value="${identifier}" />
		<replace file="${export.dir}/README" token="@!year!@" value="${year}" /> 	
		
		<zip destfile="${build.dir}/export/${identifier}.zip" level="9">
			<fileset dir="${export.dir}"/>
		</zip>
	</target>
	
	
	<target name="build-colorizer">
		<mkdir dir="${build.dir}" />
		<javac destdir="${build.dir}" 
			srcdir="${tool.dir}" 
			debug="true" 
			source="${jdk.source}" 
			target="${jdk.target}" 
			encoding="UTF-8" 
			listfiles="yes"
			includeantruntime="no"
		>
			<compilerarg value="-Xlint:unchecked" />
			<compilerarg value="-Xlint:deprecation" />
			<include name="org/jenetics/colorizer/*.java" />
		</javac>
		
		<tstamp>
			<format property="JAR_TIMESTAMP" pattern="yyyy-MM-dd HH:mm" />
		</tstamp>
		
		<!--
		 # Build without the library dependencies.
		-->
		<jar 
			destfile="${build.dir}/colorizer.jar" 
			filesetmanifest="mergewithoutmain" 
			index="true" 
			update="true" 
			level="9" 
			duplicate="preserve"
		>
			<fileset dir="${build.dir}" >
				<include name="org/jenetics/colorizer/*.class" />
			</fileset>
			<manifest>
				<attribute name="ProjectName" value="colorizer" />
				<attribute name="Version" value="${version}" />
				<attribute name="Vendor" value="Franz Wilhelmstötter" />
				<attribute name="Maintainer" value="Franz Wilhelmstötter" />
				<attribute name="Implementation-URL" value="http://jenetics.sourceforge.net" />
				<attribute name="Implementation-Vendor" value="Jenetics" />
				<attribute name="Implementation-Version" value="${JAR_TIMESTAMP}" />
				<attribute name="Main-Class" value="org.jenetics.colorizer.Colorize" />
			</manifest>
		</jar>		
	</target>
	
	
	<target name="set-since-tag">
		<replace dir="${source.dir}" token="@!since!@" value="${version}" />
	</target>
	
	<target name="space2tab">
		<fixcrlf 
			srcdir="${source.dir}" 
			encoding="UTF-8" 
			tab="add" 
			tablength="3"
			javafiles="yes"
		>
			<include name="org/jenetics/**/*.java" />
		</fixcrlf>
	</target>
	
</project>





